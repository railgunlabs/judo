.TH "JUDO" "3" "Mar 2nd 2025" "Judo 1.0.0-rc3"
.SH NAME
judo_parse \- build an in-memory tree
.SH LIBRARY
Embeddable JSON parser (libjudo, -ljudo)
.SH SYNOPSIS
.nf
.B #include <judo.h>
.PP
.BI "enum judo_result judo_parse(const char *" source ", int32_t " length ", judo_value **" root ", struct judo_error *" error ", void *" user_data ", judo_memfunc " memfunc ");"
.fi
.SH DESCRIPTION
The \f[B]judo_parse\f[R](3) function parses \f[C]string\f[R] as JSON, constructs an in-memory tree structure from it, and assigns the root of the tree to \f[I]root\f[R].
If an error occurs, then \f[I]error\f[R] will be populated with description and location information.
.PP
The \f[C]string\f[R] must be UTF-8 encoded and its length specified by \f[I]length\f[R] in code units.
If \f[I]length\f[R] is negative, then \f[C]string\f[R] is interpreted as being null terminated.
.PP
The \f[I]memfunc\f[R] function must implement a memory allocator as described in \f[B]judo_memfunc\f[R](3).
The \f[I]user_data\f[R] pointer is passed to \f[I]memfunc\f[R] as-is.
.SH RETURN VALUE
.TP
JUDO_RESULT_SUCCESS
If \f[C]string\f[R] was parsed into a tree successfully.
.TP
JUDO_RESULT_BAD_SYNTAX
If \f[C]string\f[R] is malformed JSON.
.TP
JUDO_RESULT_ILLEGAL_BYTE_SEQUENCE
If \f[C]string\f[R] has an erroneously encoded Unicode character.
.TP
JUDO_RESULT_INVALID_OPERATION
If \f[C]string\f[R], \f[I]root\f[R], or \f[I]memfunc\f[R] are NULL.
.TP
JUDO_RESULT_MAXIMUM_NESTING
If \f[C]string\f[R] defines JSON with compound structures nested deeper than \f[B]JUDO_MAXDEPTH\f[R](3).
.TP
JUDO_RESULT_OUT_OF_MEMORY
If dynamic memory allocation fails.
.TP
JUDO_RESULT_MALFUNCTION
If there is a defect in the implementation.
.SH SEE ALSO
.BR judo_memfunc (3),
.BR JUDO_MAXDEPTH (3),
.BR judo_value (3),
.BR judo_error (3)
.SH AUTHOR
.UR https://railgunlabs.com
Railgun Labs
.UE .
.SH INTERNET RESOURCES
The online documentation is
.UR https://railgunlabs.com/judo
published here
.UE .
.SH LICENSING
Judo is Free Software distributed under the GNU General Public License version 3 as published by the Free Software Foundation.
Alternatively, you can license the library under a proprietary license, as set out on the
.UR https://railgunlabs.com/judo/license/
Railgun Labs website
.UE .